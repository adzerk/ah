#!/usr/bin/env bash

AH_ORG=$1

[[ -n "$AH_ORG" ]] || ah_die "Usage: $AH putorg <org> [<template>]"
[[ $(echo "$AH_ORG" |wc -w) -gt 1 ]] && ah_die "org name must not contain spaces"

s3uri=s3://$AH_BUCKET/etc/${AH_ORG}.conf

avail_templates=$(ah_s3_ls etc |sed 's@\.conf$@@')
avail_instance_types=$(cat "${AH_LIB}/instance-types.txt")

avail_images=$(aws ec2 describe-images --owners $(ah_account_id) \
  |jt Images [ ImageId % ] [ Name % ] \
  |sort -k2)

avail_keys=$(aws ec2 describe-key-pairs --no-paginate \
  |jt KeyPairs [ KeyName % ])


if ! [[ -t 0 ]]; then
  vars=$(cat)
else
  template=$(echo "$avail_templates" |grep $AH_ORG)
  ah_select -p "Existing org to use as a template? " template "$avail_templates"
  if [[ -n "$template" ]]; then
    . <(aws s3 cp s3://$(ah_var AH_BUCKET)/etc/${template}.conf - --region $(ah_var AH_MASTER_REGION) \
        |grep . |sed 's@^@export @')
  fi

  while true; do
    ah_text_input -p "Default billing group? " AH_BILLING_GROUP
    ah_text_input -p "Default billing project? " AH_BILLING_PROJECT

    while ah_select -p "Default machine image? " AH_LC_IMAGE_ID "$avail_images"; do
      [[ "$AH_LC_IMAGE_ID" ]] && break
    done

    while ah_select -p "Default SSH key pair? " AH_LC_KEY_NAME "$avail_keys"; do
      [[ "$AH_LC_KEY_NAME" ]] && break
    done

    while ah_select -p "Default instance type? " AH_LC_INSTANCE_TYPE "$avail_instance_types"; do
      [[ "$AH_LC_INSTANCE_TYPE" ]] && break
    done

    vars=$(set |grep -E '^AH_(BILLING_GROUP|BILLING_PROJECT|LC_IMAGE_ID|LC_KEY_NAME|LC_INSTANCE_TYPE)=')

    echo
    echo "$vars"
    echo

    read -sn 1 -p "Approve? [yN] " approve
    [[ "$approve" == "y" ]] && echo && break;

    echo
    echo "Okay, starting over (ctrl-c to abort)."
    echo
  done

  echo
fi

save_settings() {
  echo "$vars" |aws s3 cp - $s3uri --region $AH_MASTER_REGION
}

ah_try -m "Saving org settings..." save_settings > /dev/null
