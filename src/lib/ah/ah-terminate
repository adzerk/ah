#!/usr/bin/env bash
# vim: set ft=sh:

read -sn 1 -p "Really terminate environment '$(ah_var AH_ENV)'? [yN] " approve
echo
[[ "$approve" == "y" ]] || exit 0

ah_info "Loading env configuration info..."
. <(ah_env_info $AH_ENV |sed 's@^@export @')
ah_success "OK.\n"

if ah_check "autoscaling group exists" ah_asg_exists $AH_ENV; then
  echo -n "Deleting autoscaling group..."
  aws autoscaling delete-auto-scaling-group \
    --auto-scaling-group-name $AH_ENV --force-delete \
    > /dev/null
  echo "done."
  while ah_not ah_check "autoscaling group deleted" ah_not ah_asg_exists $AH_ENV; do
    sleep 5
  done
fi

if ah_check "launch configuration exists" ah_launch_config_exists $AH_ENV_LC; then
  ah_try -m "Deleting launch configuration $AH_ENV_LC..." \
    aws autoscaling delete-launch-configuration \
      --launch-configuration-name $AH_ENV_LC \
      > /dev/null
fi

for sg_id in $AH_ENV_SGS; do
  ah_try -fm "Deleting SG $sg_id..." \
    aws ec2 delete-security-group \
      --group-id $sg_id \
      > /dev/null
done

for sg_id in $AH_ENV_CL_VPC_SGS; do
  ah_try -fm "Deleting SG $sg_id..." \
    aws ec2 delete-security-group \
      --group-id $sg_id \
      > /dev/null
done

if ah_check "instance profile exists" ah_instance_profile_exists $AH_ENV; then
  ah_try -m "Removing role..." \
    aws iam remove-role-from-instance-profile \
      --role-name $AH_ENV \
      --instance-profile-name $AH_ENV \
      > /dev/null

  ah_try -m "Deleting instance profile..." \
    aws iam delete-instance-profile \
      --instance-profile-name $AH_ENV \
      > /dev/null
fi

if ah_check "role exists" ah_role_exists $AH_ENV; then
  ah_try -m "Detaching role policies..." \
    ah_detach_all_role_policies $AH_ENV

  ah_try -m "Deleting inline role policies..." \
    ah_delete_inline_role_policies $AH_ENV

  ah_try -m "Deleting role..." \
    aws iam delete-role --role-name $AH_ENV > /dev/null
fi
